{
  "AWSTemplateFormatVersion":"2010-09-09",
  "Description":"ClourFormation Template for creating API Gateway Proxy into a switch controller",
  "Parameters":{

    "EnvironmentType" : {
      "Description" : "Environment type.",
      "Default" : "prod",
      "Type" : "String",
      "AllowedValues" : ["prod"],
      "ConstraintDescription" : "You must specify the environment."
    },

    "ControllerPublicIP" : {
      "Description" : "Public IP Address of the controller.",
      "Default" : "x.x.x.x",
      "Type" : "String",
      "ConstraintDescription" : "You must specify the public IP address of the controller."
    },
  },
  
  "Resources":{

    "SwitchProxyRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "RoleName" : { "Fn::Join" : [ "-", [ "SwitchProxyRole", {"Ref" : "EnvironmentType"} ] ] },
        "Policies": [ {
           "PolicyName": { "Fn::Join" : [ "-", [ "SwitchProxyPolicy", {"Ref" : "EnvironmentType"} ] ] },
           "PolicyDocument": {
              "Version" : "2012-10-17",
              "Statement": [ {
                 "Effect": "Allow",
                  "Action": [
                    "s3:Put*",
                    "s3:Get*"
                  ],
                  "Resource": [
                    { "Fn::Join" : [ ":", [ "arn:aws:s3::", {"Ref" : "TargetBucket"} ] ] },
                    { "Fn::Join" : [ "/", [ { "Fn::Join" : [ ":", [ "arn:aws:s3::", {"Ref" : "TargetBucket"} ] ] }, "*" ] ] }
                  ]
              } ]
            }
          } 
        ],
        "AssumeRolePolicyDocument": {
          "Version" : "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [ "apigateway.amazonaws.com" ]
              },
              "Action": [ "sts:AssumeRole" ]
            }]
        },
        "Path": "/"
      }
    },

    "SwitchProxyGroup" : {
       "Type" : "AWS::IAM::Group",
       "Properties" : {
          "Path" : "/",
          "ManagedPolicyArns" : [ 
            "arn:aws:iam::aws:policy/AmazonAPIGatewayInvokeFullAccess"
          ]
       }
    },
 
 
    "SwitchProxyUser" : {
       "Type" : "AWS::IAM::User",
       "Properties" : {
          "Groups" : [ { "Ref" : "SwitchProxyGroup" } ],
          "Path" : "/",
          "UserName" : { "Fn::Join" : [ "-", [ "SwitchProxyUser", {"Ref" : "EnvironmentType"} ] ] }

       }
    },
    
    "SwitchProxyAccessKey" : {
      "Type" : "AWS::IAM::AccessKey",
      "Properties" : {
        "UserName" : { "Ref" : "SwitchProxyUser" }
      }
    },
    
    "SwitchProxyApi" : {
      "DependsOn" : "SwitchProxyRole",
      "Type" : "AWS::ApiGateway::RestApi",
      "Properties" : {  
        "Body" : {
          "swagger": "2.0",
          "info": {
            "version": "2016-10-13T23:04:43Z",
            "title": "SwitchProxy"
          },
          "schemes": [
            "https"
          ],
          "paths": {
            "/events/{events}": {
              "get": {
                "parameters": [
                  {
                    "name": "events",
                    "in": "path",
                    "required": true,
                    "type": "string"
                  }
                ],
                "responses": {
                  "200": {
                    "description": "200 response",
                    "headers": {
                      "Content-Length": {
                        "type": "string"
                      },
                      "Date": {
                        "type": "string"
                      },
                      "Content-Type": {
                        "type": "string"
                      }
                    }
                  },
                  "400": {
                    "description": "400 response"
                  },
                  "500": {
                    "description": "500 response"
                  }
                },
                "security": [
                  {
                    "sigv4": []
                  },
                  {
                    "api_key": []
                  }
                ],
                "x-amazon-apigateway-integration": {
                  "credentials": { "Fn::GetAtt" : ["SwitchProxyRole", "Arn"] },
                  "responses": {
                    "4\\d{2}": {
                      "statusCode": "400"
                    },
                    "default": {
                      "statusCode": "200",
                      "responseParameters": {
                        "method.response.header.Content-Type": "integration.response.header.Content-Type",
                        "method.response.header.Date": "integration.response.header.Date",
                        "method.response.header.Content-Length": "integration.response.header.content-length"
                      }
                    },
                    "5\\d{2}": {
                      "statusCode": "500"
                    }
                  },
                  "requestParameters": {
                    "integration.request.path.object": "method.request.path.events"
                  },
                  "uri": { "Fn::Join" : [ "/", [ "arn:aws:apigateway:us-east-1:s3:path", {"Ref" : "TargetBucket"}, "{object}" ] ] },
                  "passthroughBehavior": "when_no_match",
                  "httpMethod": "GET",
                  "type": "aws"
                }
              },
              "post": {
                "consumes": [
                  "application/json"
                ],
                "produces": [
                  "application/json"
                ],
                "parameters": [
                  {
                    "name": "Content-Type",
                    "in": "header",
                    "required": false,
                    "type": "string"
                  },
                  {
                    "name": "events",
                    "in": "path",
                    "required": true,
                    "type": "string"
                  },
                  {
                    "in": "body",
                    "name": "Event",
                    "required": true,
                    "schema": {
                      "$ref": "#/definitions/Event"
                    }
                  }
                ],
                "responses": {
                  "200": {
                    "description": "200 response",
                    "schema": {
                      "$ref": "#/definitions/Status"
                    },
                    "headers": {
                      "Content-Length": {
                        "type": "string"
                      },
                      "Content-Type": {
                        "type": "string"
                      }
                    }
                  },
                  "400": {
                    "description": "400 response"
                  },
                  "500": {
                    "description": "500 response"
                  }
                },
                "security": [
                  {
                    "sigv4": []
                  },
                  {
                    "api_key": []
                  }
                ],
                "x-amazon-apigateway-request-validator": "Validate body",
                "x-amazon-apigateway-integration": {
                  "credentials": { "Fn::GetAtt" : ["SwitchProxyRole", "Arn"] },
                  "responses": {
                    "4\\d{2}": {
                      "statusCode": "400"
                    },
                    "default": {
                      "statusCode": "200",
                      "responseParameters": {
                        "method.response.header.Content-Type": "integration.response.header.Content-Type",
                        "method.response.header.Content-Length": "integration.response.header.Content-Length"
                      },
                      "responseTemplates": {
                        "application/json": "#set($inputRoot = $input.path('$'))\n{\n  \"status\" : {\n    \"result\" : 1\n  }\n}"
                      }
                    },
                    "5\\d{2}": {
                      "statusCode": "500"
                    }
                  },
                  "requestParameters": {
                    "integration.request.path.object": "method.request.path.events",
                    "integration.request.header.x-amz-acl": "'authenticated-read'",
                    "integration.request.header.Content-Type": "method.request.header.Content-Type"
                  },
                  "uri": { "Fn::Join" : [ "/", [ "arn:aws:apigateway:us-east-1:s3:path", {"Ref" : "TargetBucket"}, "{object}" ] ] },
                  "passthroughBehavior": "when_no_templates",
                  "httpMethod": "PUT",
                  "requestTemplates": {
                    "application/json": "#set($inputRoot = $input.path('$'))\n[\n  #foreach($impressionEvent in $inputRoot.impressionEventsList)\n{\n\n  \"inst_id\"             : \"$inputRoot.inst_id\",\n  \"inst_sign\"           : \"$inputRoot.inst_sign\",\n  \"client_timestamp\"    : \"$inputRoot.timestamp\",\n  \"m2m_build\"           : \"$inputRoot.m2m_build\",\n  \"isBackground\"        : \"$inputRoot.isBackground\",\n  \"m2m_rels\"            : \"$inputRoot.m2m_rels\",\n  \"event_request_id\"    : \"$inputRoot.event_request_id\",\n  \"impression_id\"       : \"$impressionEvent.impressionId\",\n    #foreach($event in $impressionEvent.events)\n  \"event_type\"          : \"$event.event\",\n  \"event_timestamp\"     : \"$event.timestamp\"\n    #end\n  #end\n\n}]\n"
                  },
                  "type": "aws"
                }
              }
            }
          },
          "securityDefinitions": {
            "api_key": {
              "type": "apiKey",
              "name": "x-api-key",
              "in": "header"
            },
            "sigv4": {
              "type": "apiKey",
              "name": "Authorization",
              "in": "header",
              "x-amazon-apigateway-authtype": "awsSigv4"
            }
          },
          "definitions": {
            "Status": {
              "type": "object",
              "required": [
                "status"
              ],
              "properties": {
                "status": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "integer"
                    }
                  }
                }
              },
              "title": "Response"
            },
            "Event": {
              "type": "object",
              "properties": {
                "inst_id": {
                  "type": "string"
                },
                "inst_sign": {
                  "type": "string"
                },
                "timestamp": {
                  "type": "string"
                },
                "m2m_build": {
                  "type": "string"
                },
                "isBackground": {
                  "type": "string"
                },
                "m2m_rels": {
                  "type": "string"
                },
                "event_request_id": {
                  "type": "integer",
                  "minimum": 1
                },
                "impressionEventsList": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "impressionId": {
                        "type": "string"
                      },
                      "events": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "event": {
                              "type": "string"
                            },
                            "timestamp": {
                              "type": "integer"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "title": "EventsBatch"
            }
          },
          "x-amazon-apigateway-request-validators": {
            "Validate body": {
              "validateRequestParameters": false,
              "validateRequestBody": true
            }
          }
        }
      }
    }
  },

  "Outputs": {
    "AccessKey" : {
      "Description" : "The access key used to authenticate requests to the API Gateway.",
      "Value" :  { "Ref" : "SwitchProxyAccessKey" },
      "Export" : { "Name" : "AccessKey" }
    },
    "SecretAccessKey" : {
      "Description" : "The access key secret used to authenticate requests to the API Gateway.",
      "Value" :  { "Fn::GetAtt" : [ "SwitchProxyAccessKey", "SecretAccessKey" ] },
      "Export" : { "Name" : "SecretAccessKey" }
    }
    
  }

}