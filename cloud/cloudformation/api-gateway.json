{
  "AWSTemplateFormatVersion":"2010-09-09",
  "Description":"ClourFormation Template for creating API Gateway Proxy to a Raspberry Pi controller",
  "Parameters":{

    "EnvironmentType" : {
      "Description" : "Environment type.",
      "Default" : "prod",
      "Type" : "String",
      "AllowedValues" : ["prod"],
      "ConstraintDescription" : "You must specify the environment."
    },
    
    "TargetBucket" : {
      "Description" : "The S3 bucket you wish to serve the Switch site from.",
      "Default" : "glo-switchsite",
      "Type" : "String",
      "ConstraintDescription" : "You must specify the name of an S3 bucket."
    },

    "ControllerPublicIP" : {
      "Description" : "Public IP Address of the controller.",
      "Default" : "192.168.1.42",
      "Type" : "String",
      "ConstraintDescription" : "You must specify the public IP address of the controller."
    },
  },
  
  "Resources":{

    "SwitchProxyRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "RoleName" : { "Fn::Join" : [ "-", [ "SwitchProxyRole", {"Ref" : "EnvironmentType"} ] ] },
        "Policies": [ {
           "PolicyName": { "Fn::Join" : [ "-", [ "SwitchEventPolicy", {"Ref" : "EnvironmentType"} ] ] },
           "PolicyDocument": {
              "Version" : "2012-10-17",
              "Statement": [ {
                 "Effect": "Allow",
                  "Action": [
                    "s3:Get*"
                  ],
                  "Resource": [
                    { "Fn::Join" : [ ":", [ "arn:aws:s3::", {"Ref" : "TargetBucket"} ] ] },
                    { "Fn::Join" : [ "/", [ { "Fn::Join" : [ ":", [ "arn:aws:s3::", {"Ref" : "TargetBucket"} ] ] }, "*" ] ] }
                  ]
              } ]
            }
          } 
        ],
        "AssumeRolePolicyDocument": {
          "Version" : "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [ "apigateway.amazonaws.com" ]
              },
              "Action": [ "sts:AssumeRole" ]
            }]
        },
        "Path": "/"
      }
    },
    
    "SwitchProxyGroup" : {
       "Type" : "AWS::IAM::Group",
       "Properties" : {
          "Path" : "/",
          "ManagedPolicyArns" : [ 
            "arn:aws:iam::aws:policy/AmazonAPIGatewayInvokeFullAccess"
          ]
       }
    },
 
    "SwitchProxyUser" : {
       "Type" : "AWS::IAM::User",
       "Properties" : {
          "Groups" : [ { "Ref" : "SwitchProxyGroup" } ],
          "Path" : "/",
          "UserName" : { "Fn::Join" : [ "-", [ "SwitchProxyUser", {"Ref" : "EnvironmentType"} ] ] }

       }
    },
    
    "SwitchProxyAccessKey" : {
      "Type" : "AWS::IAM::AccessKey",
      "Properties" : {
        "UserName" : { "Ref" : "SwitchProxyUser" }
      }
    },
    
    "SwitchProxyApi" : {
      "DependsOn" : "SwitchProxyRole",
      "Type" : "AWS::ApiGateway::RestApi",
      "Properties" : {  
        "Body" : {
          "swagger": "2.0",
          "info": {
            "version": "2016-10-13T23:04:43Z",
            "title": "SwitchProxy"
          },
          "host": "q027fw4q5i.execute-api.us-east-1.amazonaws.com",
          "basePath": "/prod",
          "schemes": [
            "https"
          ],
          "paths": {
            "/switch": {
              "get": {
                "produces": [
                  "application/json"
                ],
                "responses": {},
                "x-amazon-apigateway-integration": {
                  "responses": {
                    "default": {
                      "statusCode": "200"
                    }
                  },
                  "uri": { "Fn::Join" : [ "/", [ "http:/", { "Ref" : "ControllerPublicIP" }, "switch" ] ] },
                  "passthroughBehavior": "when_no_match",
                  "httpMethod": "GET",
                  "type": "http_proxy"
                }
              }
            },
            "/switch/{id}": {
              "get": {
                "produces": [
                  "application/json"
                ],
                "parameters": [
                  {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                  }
                ],
                "responses": {
                  "200": {
                    "description": "200 response",
                    "headers": {
                      "Content-Length": {
                        "type": "string"
                      },
                      "Date": {
                        "type": "string"
                      },
                      "Content-Type": {
                        "type": "string"
                      }
                    }
                  },
                  "400": {
                    "description": "400 response"
                  },
                  "500": {
                    "description": "500 response"
                  }
                },
                "security": [
                  {
                    "sigv4": []
                  },
                  {
                    "api_key": []
                  }
                ],
                "x-amazon-apigateway-integration": {
                  "responses": {
                    "default": {
                      "statusCode": "200"
                    }
                  },
                  "requestParameters": {
                    "integration.request.path.id": "method.request.path.id"
                  },
                  "uri": { "Fn::Join" : [ "/", [ "http:/", { "Ref" : "ControllerPublicIP" }, "switch", "{id}" ] ] },
                  "passthroughBehavior": "when_no_match",
                  "httpMethod": "GET",
                  "type": "http_proxy"
                }
              },
              "put": {
                "produces": [
                  "application/json"
                ],
                "parameters": [
                  {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                  }
                ],
                "responses": {},
                "x-amazon-apigateway-integration": {
                  "responses": {
                    "default": {
                      "statusCode": "200"
                    }
                  },
                  "requestParameters": {
                    "integration.request.path.id": "method.request.path.id"
                  },
                  "uri": { "Fn::Join" : [ "/", [ "http:/", { "Ref" : "ControllerPublicIP" }, "switch", "{id}" ] ] },
                  "passthroughBehavior": "when_no_match",
                  "httpMethod": "PUT",
                  "type": "http_proxy"
                }
              }
            }
          },
          "securityDefinitions": {
            "api_key": {
              "type": "apiKey",
              "name": "x-api-key",
              "in": "header"
            },
            "sigv4": {
              "type": "apiKey",
              "name": "Authorization",
              "in": "header",
              "x-amazon-apigateway-authtype": "awsSigv4"
            }
          }
        }
      }
    },
    
    
    "SwitchProxyDeployment": {
      "Type": "AWS::ApiGateway::Deployment",
      "Properties": {
        "RestApiId": { "Ref": "SwitchProxyApi" },
        "Description": "SwitchProxy deployment"
      }
    },

    "SwitchProxyProdStage": {
      "Type": "AWS::ApiGateway::Stage",
      "DependsOn": [ "SwitchProxyApi", "SwitchProxyDeployment" ],
      "Properties": {
        "StageName": "prod",
        "Description": "Prod Stage",
        "RestApiId": { "Ref": "SwitchProxyApi" },
        "DeploymentId": { "Ref": "SwitchProxyDeployment" },
        "MethodSettings": [
            {
                "ResourcePath": "/",
                "HttpMethod": "GET",
                "MetricsEnabled": "true",
                "DataTraceEnabled": "true",
                "LoggingLevel": "INFO"
            },
            {
                "ResourcePath": "/switch",
                "HttpMethod": "GET",
                "MetricsEnabled": "true",
                "DataTraceEnabled": "true",
                "LoggingLevel": "INFO"
            },
            {
                "ResourcePath": "/switch/{id}",
                "HttpMethod": "GET",
                "MetricsEnabled": "true",
                "DataTraceEnabled": "true",
                "LoggingLevel": "INFO"
            },
            {
                "ResourcePath": "/switch/{id}",
                "HttpMethod": "PUT",
                "MetricsEnabled": "true",
                "DataTraceEnabled": "true",
                "LoggingLevel": "INFO"
            }
        ]

      }
    },

    "SwitchProxyUsagePlan" : {
      "Type" : "AWS::ApiGateway::UsagePlan",
      "Properties" : {
        "ApiStages" : [ { "ApiId" : { "Ref" : "SwitchProxyApi" }, "Stage" : { "Ref" : "SwitchProxyProdStage" }} ],
        "UsagePlanName" : "SwitchProxyPlan"
      }
    },

    "SwitchProxyApiKey": {
      "Type": "AWS::ApiGateway::ApiKey",
      "DependsOn": [ "SwitchProxyDeployment"],
      "Properties": {
        "Name": "SwitchProxyApiKey",
        "Description": "CloudFormation API Key for SwitchProxy",
        "Enabled": "true",
        "StageKeys": [{
          "RestApiId": { "Ref": "SwitchProxyApi" },
          "StageName": { "Ref" : "SwitchProxyProdStage" }
        }]
      }
    },

    "SwitchProxyUsagePlanKey" : {
      "Type": "AWS::ApiGateway::UsagePlanKey",
      "DependsOn": [ "SwitchProxyApiKey", "SwitchProxyUsagePlan" ],
      "Properties": {
        "KeyId" : { "Ref" : "SwitchProxyApiKey" },
        "KeyType" : "API_KEY",
        "UsagePlanId" : {"Ref" : "SwitchProxyUsagePlan"}
      }
    }
    
  },

  "Outputs": {
    "AccessKey" : {
      "Description" : "The access key used to authenticate requests to the API Gateway.",
      "Value" :  { "Ref" : "SwitchProxyAccessKey" },
      "Export" : { "Name" : "AccessKey" }
    },
    "SecretAccessKey" : {
      "Description" : "The access key secret used to authenticate requests to the API Gateway.",
      "Value" :  { "Fn::GetAtt" : [ "SwitchProxyAccessKey", "SecretAccessKey" ] },
      "Export" : { "Name" : "SecretAccessKey" }
    }
    
  }

}